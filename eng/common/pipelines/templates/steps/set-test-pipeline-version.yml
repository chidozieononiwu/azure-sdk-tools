parameters:
  PackageName: ''
  ServiceDirectory: ''
  TestPipeline: false

# This step creates get the next valid version for release and updates the package version and CHANGELOG accordingly.
# This all happens without persisting the changes.
# This is needed to facilitate easy release of the template package for testing the pipelines.

steps:
- ${{ if eq(parameters.TestPipeline, 'true') }}:
    - task: PowerShell@2
      displayName: Prep template pipeline for release
      condition: and(succeeded(), ne(variables['Skip.SetTestPipelineVersion'], 'true')) 
      inputs:
        pwsh: true
        workingDirectory: $(Build.SourcesDirectory)
        filePath: $(Build.SourcesDirectory)/eng/common/scripts/SetTestPipelineVersion.ps1
        arguments: '-BuildID $(Build.BuildId) -PackageName ${{ parameters.PackageName }} -ServiceDirectory ${{ parameters.ServiceDirectory }}'