resources:
  pipelines:
  - pipeline: net-mgmt
    project: internal
    source: net\net - mgmt
    branch: main
  - pipeline: AzureStackMultiAPI
    project: internal
    source: net\Azure Stack MultiAPI Only
    branch: main
  - pipeline: AzureStackMultiAPI(Private)
    project: internal
    source: net\pr\Azure Stack MultiAPI Only
    branch: main
  - pipeline: net-template
    project: internal
    source: net\net - template
    branch: main
  repositories:
  - repository: azure-sdk-build-tools
    type: git
    name: internal/azure-sdk-build-tools
    ref: refs/tags/azure-sdk-build-tools_20211215.1

parameters:
- name: SourcePipeline
  type: string
  default: 'net-mgmt'
  values:
  - 'net-mgmt'
  - 'AzureStackMultiAPI'
  - 'AzureStackMultiAPI(Private)'
  - 'net-template'
- name: ShouldPublish
  type: string
  default: true
- name: ShouldSign
  type: string
  default: true

variables:
  downloadedArtifacts: '$(PIPELINE.WORKSPACE)/${{ parameters.SourcePipeline }}/packages'
  buildToolsPath: '$(Build.SourcesDirectory)/azure-sdk-build-tools'
  nugetVersion: '5.4.x'
  partnerDropsSubscription: 'azuresdkpartnerdrops-kv Secrets'
  partnerDropsStorageName: 'azuresdkpartnerdrops'
  partnerDropsContainerName: 'mgmt-netsdk-signed'
  partnerDropsBlobDestPrefix: '$(System.DefinitionId)-$(Build.BuildId)-$(System.JobAttempt)'

jobs:
  - job: BuildPipelineArtifactToNuget
    pool:
      name: azsdk-pool-mms-win-2019-general
      vmImage: MMS2019

    steps:
      - checkout: self
      - checkout: azure-sdk-build-tools

      - download: '${{ parameters.SourcePipeline }}'
        artifact: packages
        patterns: '*'

      - task: Powershell@2
        inputs:
          filePath: $(buildToolsPath)/scripts/create-tags-and-git-release.ps1
          arguments: >
            -artifactLocation $(downloadedArtifacts)
            -workingDirectory $(System.DefaultWorkingDirectory)
            -packageRepository 'Nuget'
            -releaseSha '$(resources.pipeline.${{ parameters.SourcePipeline }}.sourceCommit)'
            -repoOwner 'azure-sdk-for-net'
            -repoName 'Azure'
          pwsh: true
        displayName: 'Verify Package Tags and Create Git Releases'

      - ${{ if eq(parameters.ShouldSign, true) }}:
        - template: pipelines/steps/net-signing.yml@azure-sdk-build-tools
          parameters:
            PackagesPath: $(downloadedArtifacts)
            BuildToolsPath: '$(buildToolsPath)'

      - ${{ if eq(parameters.ShouldPublish, true) }}:
        - task: MSBuild@1
          displayName: 'Upload Symbols'
          inputs:
            solution: '$(buildToolsPath)/tools/symboltool/SymbolUploader.proj'
            msbuildArguments: >
              /p:PackagesPath=$(downloadedArtifacts)
              /p:MSPublicSymbolsPAT=$(azuresdk-microsoftpublicsymbols-devops-pat)
              /p:MSSymbolsPAT=$(azuresdk-microsoft-devops-pat)
              /p:AzureSDKSymbolsPAT=$(azuresdk-azure-sdk-devops-pat)

        - task: NuGetToolInstaller@1
          displayName: 'Use NuGet $(nugetVersion)'
          inputs:
            versionSpec: $(nugetVersion)

        - task: NuGetCommand@2
          displayName: 'Publish to Nuget'
          inputs:
            command: push
            packagesToPush: '$(downloadedArtifacts)/**/*.nupkg;!$(downloadedArtifacts)/**/*.symbols.nupkg'
            nuGetFeedType: external
            publishFeedCredentials: Nuget.org

      - task: AzureFileCopy@2
        displayName: 'Copy Signed Files to Blob'
        inputs:
          SourcePath: '$(downloadedArtifacts)'
          azureSubscription: '$(partnerDropsSubscription)'
          Destination: AzureBlob
          storage: '$(partnerDropsStorageName)'
          ContainerName: '$(partnerDropsContainerName)'
          BlobPrefix: '$(partnerDropsBlobDestPrefix)'
        condition: and(succeeded(), ne(variables['SkipCopySignedFilestoBlob'], 'true'))

      - powershell: |
          $link  = $(signedPackageLinkPrefix) + [System.Net.WebUtility]::UrlEncode($(signedPackageLinkSuffix))

          echo "Packages successfully uploaded to mgmt-netsdk-signed\$(partnerDropsBlobDestPrefix) container download from:"
          echo "$link"
        displayName: 'Link to signed packages'
        condition: and(succeeded(), ne(variables['SkipLinkToSignedPackages'], 'true'))